
#======Шифратор=======

def encoder(key, text):
#======Новый ключ, который будет не меньше входного слова=======
new_key = key
#======
#======Проверка и инициализация нового ключа=======
while len(new_key)<len(text):
new_key+=key
#======
#===Выходной текст===
out=""
#======
#===Индекс символа в массиве входного текста===
i=0
#======
#======Цикл для шифрования
for s in text:
#====код символа входного слова==
p=ord(s)
#====код символа ключа==
k=ord(new_key[i])
#====исключающее ИЛИ==
c=p^k
#====Запись для выходного текста==
out=out+str(c) + " "
#====инкрементация индекса==
i=i+1
return out
#==========================

#========Дещифратор=======

def decoder(key, text):
#======Новый ключ, который будет не меньше входного слова=======
new_key = key
#======
#======Проверка и инициализация нового ключа=======
while len(new_key)<len(text):
new_key+=key
#======
#===Выходной текст===
out=""
#======
#===Подготовка массива символов из строки (убираются пробелы)===
arr_code = text.split()
#======
#===Индекс символа в массиве входного текста===
i=0
#======
#======Цикл для дешифрования (по списку символов)
for code in arr_code:
#====код символа из шифра==
c=int(code)
#====код символа ключа==
k=ord(new_key[i])
#====исключающее ИЛИ==
p=c^k
#====Преобразование символа из кода и запись для выходного текста==
out=out+chr(p)
#====инкрементация индекса==
i=i+1
return out
#==========================
key = ""
input_text = ""
output_text = ""
print("Введите ключ")
key = input()
print("Введите текст:")
input_text = input()
print("Выберите режим:")
print("1. Шифратор")
print("2. Дешифратор")
act = input() 
if act == "1":
output_text = encoder(key, input_text)
print(output_text)
elif act == "2":
output_text = decoder(key, input_text)
print(output_text)
else:
print("Такого режима нет! Запустите программу снова и выберите нужный режим.")
